"use strict";
(self["webpackChunkliyubin_blog"] = self["webpackChunkliyubin_blog"] || []).push([[8130],{

/***/ 7735:
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"archive":{"blogPosts":[{"id":"docusaurus_github_pages","metadata":{"permalink":"/blog/docusaurus_github_pages","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/docusaurus_github_pages.md","source":"@site/blog/docusaurus_github_pages.md","title":"Docusaurus+GithubPages搭博客","description":"本文  详细介绍了基于 Docusaurus + Github Pages 搭建博客的过程，包括环境准备（git 和 Node 下载）、安装脚手架、项目结构、配置（必填和可选字段）、个性化主题、部署（生成静态文件、配置相关文件、本地测试等），最后进行了总结。","date":"2024-12-20T03:35:10.000Z","tags":[{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"},{"inline":true,"label":"github pages","permalink":"/blog/tags/github-pages"}],"readingTime":10.625,"hasTruncateMarker":false,"authors":[{"name":"转载","title":"others","key":"转载","page":null}],"frontMatter":{"slug":"docusaurus_github_pages","title":"Docusaurus+GithubPages搭博客","authors":"转载","tags":["docusaurus","github pages"]},"unlisted":false,"nextItem":{"title":"Welcome","permalink":"/blog/welcome"}},"content":"本文  详细介绍了基于 Docusaurus + Github Pages 搭建博客的过程，包括环境准备（git 和 Node 下载）、安装脚手架、项目结构、配置（必填和可选字段）、个性化主题、部署（生成静态文件、配置相关文件、本地测试等），最后进行了总结。\\n\\n关联问题: Docusaurus有何优势 Node版本如何选择 部署能换分支吗\\n\\n## 前言\\n\\n解决问题时经常看到大佬们的个人博客，于是一直想有一个属于自己的博客，为了满足自己的博客愿望，也为了督促自己要一直学习，小记一下（过程曲折）。暂时接触 React 稍多，而 `Docusaurus`是 React 驱动的，所以这里博客是基于`Docusaurus`+`Github Pages`来实现。\\n\\n🔗 `Docusaurus`官网链接：[docusaurus.io/zh-CN/](https://link.juejin.cn/?target=https%3A%2F%2Fdocusaurus.io%2Fzh-CN%2F \\"https://docusaurus.io/zh-CN/\\")\\n\\n## 一、 环境准备\\n\\n### git\\n\\ngit 下载链接：[git-scm.com/downloads](https://link.juejin.cn/?target=https%3A%2F%2Fgit-scm.com%2Fdownloads \\"https://git-scm.com/downloads\\") 自己用的是 Windows 10，下载的是：[64-bit Git for Windows Setup](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Freleases%2Fdownload%2Fv2.37.3.windows.1%2FGit-2.37.3-64-bit.exe \\"https://github.com/git-for-windows/git/releases/download/v2.37.3.windows.1/Git-2.37.3-64-bit.exe\\")，其他设备按照对应机型选即可。 ![image.png](docusaurus_github_pages/2386d8ad33f2404e999671c75b72dfa9~tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)\\n\\n### Node\\n\\nNode 下载链接：[nodejs.org/zh-cn/](https://link.juejin.cn/?target=https%3A%2F%2Fnodejs.org%2Fzh-cn%2F \\"https://nodejs.org/zh-cn/\\") `Docusaurus`官方要求 Node.js -- v16.14 或以上版本（你可以运行`node -v`命令查看版本号），安装 Node.js 时，建议勾选所有和依赖相关的选项，其他设备按照对应机型选即可。 ![image.png](docusaurus_github_pages/6134fe5d7cd449c8982c09a99a221f62~tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)\\n\\n## 二、安装脚手架\\n\\n### 1\\\\. 初始化新项目：\\n\\n```shell\\nnpm init docusaurus\\n```\\n\\n控制台会提示输入项目名称、模板等信息，这里一直回车向后就可以，这些信息都是可以自己修改的。\\n\\n### 2\\\\. 项目结构\\n\\n初始化完成后就会得到如下的项目结构（里面会有一些示例文件，后续删除即可），详细的[项目结构解读](https://link.juejin.cn/?target=https%3A%2F%2Fdocusaurus.io%2Fzh-CN%2Fdocs%2Finstallation%23project-structure-rundown \\"https://docusaurus.io/zh-CN/docs/installation#project-structure-rundown\\")：\\n\\n```javascript\\nwebsite ├── blog // 包含博客的 Markdown 文件 │ ├── ... │ └── ... ├── docs // 包含文档的 Markdown 文件 │ ├── ... │ └── ... ├── src // 如页面或自定义 React 组件一类的非文档文件 │ ├──components │ │ └── HomepageFeatures │ │ ├── styles.module.css │ │ └── index.jsindex.js │ ├── css // 页面的 css 样式 │ │ └── custom.css │ └── pages // 所有放在此目录中的 JSX/TSX/MDX 文件都会被转换成网站页面 │ ├── styles.module.css │ └── index.js ├── static // 静态目录，保存头像等文件 │ ├── img │ └── .nojekyll ├── babel.config.js // JavaScript 编译配置文件 ├── docusaurus.config.js // 站点配置文件！！ ├── package.json // 包管理文件 └── sidebars.js // 由文档使用，用于指定侧边栏中的文档顺序\\n```\\n\\n### 3\\\\. 运行开发服务器\\n\\n```shell\\n# 进入根目录 cd website # 启动服务 npm run start\\n```\\n\\n默认情况下，浏览器会自动打开 [http://localhost:3000](https://link.juejin.cn/?target=http%3A%2F%2Flocalhost%3A3000 \\"http://localhost:3000\\") 的新窗口，如下： ![image.png](docusaurus_github_pages/b3125aabc7014118a82cdbf3c98c0831~tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)\\n\\n## 三、 配置 ❗\\n\\n`docusaurus.config.js` 位于你的网站的根目录，包含了你的站点的配置信息。\\n\\n### 必填字段\\n\\n👆 title：网站标题。 会用于页面元数据中，以及浏览器选项卡标题。\\n\\n修改标题`title:\'Kuriyama\'`，可以看到： ![image.png](docusaurus_github_pages/fc31f13fa10b40ecb56621679dd99b81~tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)\\n\\n✌️ url：网站网址。 你可以把它看作是顶级主机名。\\n\\n> 网站网址。 你可以把它看作是顶级主机名。 举个例子，[facebook.github.io/metro/](https://link.juejin.cn/?target=https%3A%2F%2Ffacebook.github.io%2Fmetro%2F \\"https://facebook.github.io/metro/\\") 的 URL 是`https://facebook.github.io`，而`https://docusaurus.io`的 URL 就是它本身。这个字段和`[baseUrl](https://docusaurus.io/zh-CN/docs/api/docusaurus-config#baseUrl)`字段相关。\\n\\n👌 baseUrl：站点的 base URL。 可以被看作是主机名后的路径。\\n\\n> 比如，[facebook.github.io/metro/](https://link.juejin.cn/?target=https%3A%2F%2Ffacebook.github.io%2Fmetro%2F \\"https://facebook.github.io/metro/\\") 的 base URL 是`/metro/`。 对于没有路径的网址，baseUrl 应设置为`/`。这个字段和`[url](https://docusaurus.io/zh-CN/docs/api/docusaurus-config#url)`字段相关。 开头和末尾始终要包含斜杠。\\n\\n### 可选字段\\n\\n#### 常用配置\\n\\n-   tagline：网站标语。\\n\\n修改标语`tagline:\'没有未来的未来，不是我想要的未来\'`，可以看到： ![image.png](docusaurus_github_pages/5a3f5e4ae1064c0fbdd94517beb4ed95~tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)\\n\\n-   onBrokenLinks：Docusaurus 在检测到无效链接时的行为。\\n\\n`onBrokenLinks:\'throw\' // 抛出错误`\\n\\n-   onBrokenMarkdownLinks：Docusaurus 在检测到无效 Markdown 链接时的行为。\\n\\n`onBrokenMarkdownLinks:\'warn\' // 警告`\\n\\n-   favicon：你的网站图标的路径；必须是可以用于链接 href 的 URL。 比如，如果你的图标位于 static/img/favicon.ico：\\n\\n`favicon:\'img/favicon.ico\'`，可以看到： ![image.png](docusaurus_github_pages/8c71bbd562af4eca8dc057a96f05c070~tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)\\n\\n-   i18n：用于[本地化站点](https://link.juejin.cn/?target=https%3A%2F%2Fdocusaurus.io%2Fzh-CN%2Fdocs%2Fi18n%2Fintroduction \\"https://docusaurus.io/zh-CN/docs/i18n/introduction\\")的 i18n 配置对象。\\n\\n```javascript\\n// 设置默认语言为中文简体 i18n: { defaultLocale: \'zh-Hans\', locales: [\'zh-Hans\'], },\\n```\\n\\n-   presets：预设，此处已经有了默认的\\\\*\\\\* classic \\\\*\\\\*预设：\\n\\n```javascript\\npresets: [ [ \'classic\', /** @type {import(\'@docusaurus/preset-classic\').Options} */ ({ docs: { // 文档 sidebarPath: require.resolve(\'./sidebars.js\'), // 侧边栏 // editUrl: \'\' // 编辑此页面的链接 }, blog: { // 博客 showReadingTime: true, // 在博文上显示估计阅读时间 // editUrl: \'\' // 编辑此页面的链接 }, theme: { // 主题 customCss: require.resolve(\'./src/css/custom.css\'), // 自定义 css }, }), ], ],\\n```\\n\\n#### 主题配置\\n\\n**在配置导航栏之前我删除了 blog 和 docs 文件夹内的所有内容，并在 docs 文件夹内放了一个 HTML.md 文件。**\\n\\n> navbar：导航栏，可以配置 title（标题）、logo（图标）等信息\\n\\n```javascript\\nnavbar: { title: \'Kuriyama的博客\', // 标题 hideOnScroll: false, // 下拉界面时不隐藏导航栏 items: [ { type: \'search\', // 搜索框 现在还没做好... position: \'right\', // 搜索框位置 在右边 }, { type: \'doc\', // 把这个项目的类型设置为文档链接。 docId: \'HTML\', // 这个项目链接到的文档的 ID。 position: \'right\', // 显示位置 在右边 label: \'正文\', // 项目显示的名称 }, { href: \'https://github.com/Dcose\', // 点击图标时跳转到的链接 label: \'GitHub\', // 项目显示的名称 position: \'right\', // 显示位置 在右边 }, ], },\\n```\\n\\n可以看到导航栏的改变： ![image.png](docusaurus_github_pages/5130289162bb4b1d8f1302e6ea591598~tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)\\n\\n> prism：语法高亮主题\\n\\n```javascript\\nprism: { theme: lightCodeTheme, // 用于浅色模式下代码块的 Prism 主题 darkTheme: darkCodeTheme, // 用于暗黑模式下代码块的 Prism 主题 defaultLanguage: \'javascript\', // 项目应该出现在导航栏的哪一侧 },\\n```\\n\\n> colorMode：主题色彩模式\\n\\n```javascript\\ncolorMode: { respectPrefersColorScheme: true, // 根据系统配色改变色彩模式 },\\n```\\n\\n配置完成的 docusaurus.config.js（含默认配置）：\\n\\n```javascript\\nconst lightCodeTheme = require(\'prism-react-renderer/themes/github\'); const darkCodeTheme = require(\'prism-react-renderer/themes/dracula\'); /** @type {import(\'@docusaurus/types\').Config} */ const config = { title: \'Kuriyama\', tagline: \'没有未来的未来，不是我想要的未来\', url: \'https://your-docusaurus-test-site.com\', baseUrl: \'/\', onBrokenLinks: \'throw\', onBrokenMarkdownLinks: \'warn\', favicon: \'img/favicon.ico\', i18n: { defaultLocale: \'zh-Hans\', locales: [\'zh-Hans\'], }, presets: [ [ \'classic\', /** @type {import(\'@docusaurus/preset-classic\').Options} */ ({ docs: { sidebarPath: require.resolve(\'./sidebars.js\'), }, blog: { showReadingTime: true, }, theme: { customCss: require.resolve(\'./src/css/custom.css\'), }, }), ], ], themeConfig: /** @type {import(\'@docusaurus/preset-classic\').ThemeConfig} */ ({ navbar: { title: \'Kuriyama的博客\', hideOnScroll: false, items: [ { type: \'search\', position: \'right\', }, { type: \'doc\', docId: \'HTML\', position: \'right\', label: \'正文\', }, { href: \'https://github.com/Dcose\', label: \'GitHub\', position: \'right\', }, ], }, prism: { theme: lightCodeTheme, darkTheme: darkCodeTheme, defaultLanguage: \'javascript\', }, colorMode: { respectPrefersColorScheme: true, }, }), }; module.exports = config;\\n```\\n\\n效果如下： ![image.png](docusaurus_github_pages/20f8da47abb44002bb09a9847c3a2f93~tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp) ![image.png](docusaurus_github_pages/a6a30378b1b24cfbb54a8746abdb466c~tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)\\n\\n#### 个性化\\n\\n> 💯 使用的是[**Akara**](https://link.juejin.cn/?target=https%3A%2F%2Fmessiahhh.github.io%2Fblog%2F \\"https://messiahhh.github.io/blog/\\")大佬的主题。\\n\\n## 四、 部署 ❗❗\\n\\n1.  生成静态文件：\\n\\n```shell\\nnpm run build\\n```\\n\\n> Docusaurus 只负责构建站点，然后把静态文件输出到 build 文件夹。\\n\\n2.  配置`docusaurus.config.js`：\\n\\n```javascript\\n... const config = { url: \'https://dcose.github.io\', baseUrl: \'/\', ... organizationName: \'Dcose\', // 一般是 github 的名字 projectName: \'dcose\', // 一般是仓库的名称 deploymentBranch: \'gh-pages\', // 要把静态文件部署到的分支名称 ... }; module.exports = config;\\n```\\n\\n3.  配置`package.json`：\\n\\n```javascript\\n{ \\"name\\": \\"dcose\\", // 项目名称 ... \\"scripts\\": { ... \\"deploy\\": \\"GIT_USER=dcose docusaurus deploy\\", // 部署用户名设置 ... }, ... }\\n```\\n\\n4.  本地测试\\n\\n可以快速定位部署项目可能存在的问题：\\n\\n```shell\\nnpm run serve\\n```\\n\\n5.  在 github 新建一个仓库\\n\\n名字：dcose.github.io ![image.png](docusaurus_github_pages/c7031180bb344b5294b86f44ffdfda17~tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)\\n\\n6.  在项目的根目录下新建一个`deploy.sh`脚本文件，注意修改对应的用户名和仓库名：\\n\\n```shell\\n#!/usr/bin/env sh # 确保脚本抛出遇到的错误 set -e # 生成静态文件 npm run build # 进入生成的文件夹 cd build # 如果是发布到自定义域名 # echo \'www.example.com\' > CNAME git init git add -A git commit -m \'deploy\' # 如果发布到 https://<USERNAME>.github.io # git push -f git@github.com:messiahhh/messiahhh.github.io.git master # 如果发布到 https://<USERNAME>.github.io/<REPO> # git push -f git@github.com:messiahhh/blog.git master:gh-pages git push -f https://${access_token}@github.com/Dcose/dcose.github.io.git master:gh-pages cd -\\n```\\n\\n5.  切换到项目的根目录，运行`deploy.sh`脚本文件\\n\\n注意：执行文件会启动 Git Bash，等待执行完成就好\\n\\n6.  打开 github 仓库，可以看到 gh-pages 推送的静态文件了：\\n\\n![image.png](docusaurus_github_pages/ef1aa76548d84f179d0678cc175920b6~tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp)\\n\\n7.  点击 setting，找到 Pages，就可以看到我们生成的[博客地址](https://link.juejin.cn/?target=https%3A%2F%2Fdcose.github.io%2F \\"https://dcose.github.io/\\")：\\n\\n![image.png](docusaurus_github_pages/5721e3ba322246d4a0bcea877c6ad3a4~tplv-k3u1fbpfcp-zoom-in-crop-mark1512000.webp) 完成部署！！！\\n\\n## 五、 总结\\n\\n关于博客的搭建和部署就暂告一段啦，虽然还有很多功能和插件都没有用到，希望可以在日后的学习中逐渐补全。这算是对于产出的第一次尝试，看了 [mqyqingfeng](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fmqyqingfeng%2FBlog \\"https://github.com/mqyqingfeng/Blog\\") 和 [sudongyuer](https://link.juejin.cn/?target=https%3A%2F%2Fsudongyuer.github.io%2Fblogs%2Fdaily%2F070602.html%23%25E4%25B8%2580%25E3%2580%2581%25E5%2587%2586%25E5%25A4%2587%25E5%25B7%25A5%25E4%25BD%259C \\"https://sudongyuer.github.io/blogs/daily/070602.html#%E4%B8%80%E3%80%81%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\\") 两位大佬的文章有感而发，想自己也可以有一些学习的记录，同时感谢 [Akara](https://link.juejin.cn/?target=https%3A%2F%2Fmessiahhh.github.io%2Fblog%2F \\"https://messiahhh.github.io/blog/\\") 大佬的开源主题。本文旨在分享，也希望可以帮助到有需要的人，如有存在错误或不妥的地方，请各位大佬务必帮我指正！！感谢大家！！！希望大家可以一起**无限学习，无限进步！！！！**"},{"id":"welcome","metadata":{"permalink":"/blog/welcome","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-08-26-welcome/index.md","source":"@site/blog/2021-08-26-welcome/index.md","title":"Welcome","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2021-08-26T00:00:00.000Z","tags":[{"inline":false,"label":"Facebook","permalink":"/blog/tags/facebook","description":"Facebook tag description"},{"inline":false,"label":"Hello","permalink":"/blog/tags/hello","description":"Hello tag description"},{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":0.465,"hasTruncateMarker":true,"authors":[{"name":"Sébastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","page":{"permalink":"/blog/authors/all-sebastien-lorber-articles"},"socials":{"x":"https://x.com/sebastienlorber","linkedin":"https://www.linkedin.com/in/sebastienlorber/","github":"https://github.com/slorber","newsletter":"https://thisweekinreact.com"},"imageURL":"https://github.com/slorber.png","key":"slorber"},{"name":"Yangshun Tay","title":"Front End Engineer @ Facebook","url":"https://github.com/yangshun","page":{"permalink":"/blog/authors/yangshun"},"socials":{"x":"https://x.com/yangshunz","github":"https://github.com/yangshun"},"imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["slorber","yangshun"],"tags":["facebook","hello","docusaurus"]},"unlisted":false,"prevItem":{"title":"Docusaurus+GithubPages搭博客","permalink":"/blog/docusaurus_github_pages"},"nextItem":{"title":"MDX Blog Post","permalink":"/blog/mdx-blog-post"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nHere are a few tips you might find useful.\\n\\n<!-- truncate -->\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"mdx-blog-post","metadata":{"permalink":"/blog/mdx-blog-post","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-08-01-mdx-blog-post.mdx","source":"@site/blog/2021-08-01-mdx-blog-post.mdx","title":"MDX Blog Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2021-08-01T00:00:00.000Z","tags":[{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":0.235,"hasTruncateMarker":true,"authors":[{"name":"Sébastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","page":{"permalink":"/blog/authors/all-sebastien-lorber-articles"},"socials":{"x":"https://x.com/sebastienlorber","linkedin":"https://www.linkedin.com/in/sebastienlorber/","github":"https://github.com/slorber","newsletter":"https://thisweekinreact.com"},"imageURL":"https://github.com/slorber.png","key":"slorber"}],"frontMatter":{"slug":"mdx-blog-post","title":"MDX Blog Post","authors":["slorber"],"tags":["docusaurus"]},"unlisted":false,"prevItem":{"title":"Welcome","permalink":"/blog/welcome"},"nextItem":{"title":"Long Blog Post","permalink":"/blog/long-blog-post"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\n\\n:::tip\\n\\nUse the power of React to create interactive blog posts.\\n\\n:::\\n\\n{/* truncate */}\\n\\nFor example, use JSX to create an interactive button:\\n\\n```js\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n```\\n\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>"},{"id":"long-blog-post","metadata":{"permalink":"/blog/long-blog-post","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-29-long-blog-post.md","source":"@site/blog/2019-05-29-long-blog-post.md","title":"Long Blog Post","description":"This is the summary of a very long blog post,","date":"2019-05-29T00:00:00.000Z","tags":[{"inline":false,"label":"Hello","permalink":"/blog/tags/hello","description":"Hello tag description"},{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":2.06,"hasTruncateMarker":true,"authors":[{"name":"Yangshun Tay","title":"Front End Engineer @ Facebook","url":"https://github.com/yangshun","page":{"permalink":"/blog/authors/yangshun"},"socials":{"x":"https://x.com/yangshunz","github":"https://github.com/yangshun"},"imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"long-blog-post","title":"Long Blog Post","authors":"yangshun","tags":["hello","docusaurus"]},"unlisted":false,"prevItem":{"title":"MDX Blog Post","permalink":"/blog/mdx-blog-post"},"nextItem":{"title":"First Blog Post","permalink":"/blog/first-blog-post"}},"content":"This is the summary of a very long blog post,\\n\\nUse a `<!--` `truncate` `-->` comment to limit blog post size in the list view.\\n\\n<!-- truncate -->\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"},{"id":"first-blog-post","metadata":{"permalink":"/blog/first-blog-post","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-28-first-blog-post.md","source":"@site/blog/2019-05-28-first-blog-post.md","title":"First Blog Post","description":"Lorem ipsum dolor sit amet...","date":"2019-05-28T00:00:00.000Z","tags":[{"inline":false,"label":"Hola","permalink":"/blog/tags/hola","description":"Hola tag description"},{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":0.135,"hasTruncateMarker":true,"authors":[{"name":"Sébastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","page":{"permalink":"/blog/authors/all-sebastien-lorber-articles"},"socials":{"x":"https://x.com/sebastienlorber","linkedin":"https://www.linkedin.com/in/sebastienlorber/","github":"https://github.com/slorber","newsletter":"https://thisweekinreact.com"},"imageURL":"https://github.com/slorber.png","key":"slorber"},{"name":"Yangshun Tay","title":"Front End Engineer @ Facebook","url":"https://github.com/yangshun","page":{"permalink":"/blog/authors/yangshun"},"socials":{"x":"https://x.com/yangshunz","github":"https://github.com/yangshun"},"imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"first-blog-post","title":"First Blog Post","authors":["slorber","yangshun"],"tags":["hola","docusaurus"]},"unlisted":false,"prevItem":{"title":"Long Blog Post","permalink":"/blog/long-blog-post"}},"content":"Lorem ipsum dolor sit amet...\\n\\n<!-- truncate -->\\n\\n...consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"}]}}');

/***/ })

}]);